{"version":3,"file":"index.f1d2d020.js","sources":["../../vite/modulepreload-polyfill","../../node_modules/ol/AssertionError.js","../../node_modules/ol/events/Event.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/asserts.js","../../node_modules/ol/Feature.js","../../node_modules/ol/has.js","../../node_modules/ol/transform.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/math.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/sphere.js","../../node_modules/ol/proj.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/size.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/color.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/dom.js","../../node_modules/ol/css.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/flat.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/TileState.js","../../node_modules/ol/easing.js","../../node_modules/ol/Tile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/View.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/KeyCode.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/Map.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/TileCache.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/xml.js","../../node_modules/ol/format/XMLFeature.js","../../node_modules/ol/format/xsd.js","../../node_modules/ol/format/KML.js","../../node_modules/ol/webgl.js","../../node_modules/ol/webgl/Buffer.js","../../node_modules/ol/webgl/ContextEventType.js","../../node_modules/ol/webgl/PostProcessingPass.js","../../node_modules/ol/vec/mat4.js","../../node_modules/ol/webgl/Helper.js","../../node_modules/ol/renderer/webgl/Layer.js","../../node_modules/ol/webgl/RenderTarget.js","../../node_modules/ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../../node_modules/ol/render/webgl/utils.js","../../node_modules/ol/worker/webgl.js","../../node_modules/ol/renderer/webgl/PointsLayer.js","../../node_modules/ol/layer/Heatmap.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/layer/Tile.js","../../node_modules/ol/source/XYZ.js","../../node_modules/ol/source/OSM.js","../../node_modules/ol/source/Stamen.js","../../main.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          } else if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          } else if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  SIZE_PX: 'u_sizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {users: 0, canvas};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const canvas = cacheItem.canvas;\n  const gl = getContext(canvas);\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = getCanvas(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    const gl = this.getGL();\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n    this.uniformLocations_ = {};\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDraw(frameState, disableAlphaBlend) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.SIZE_PX, [size[0], size[1]]);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.uniformLocations_ = {};\n    this.attribLocations_ = {};\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.getGL().uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.getGL();\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesCount] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesCount\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesCount;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesCount\n  );\n  instructionsIndex += customAttributesCount;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r=\\\"undefined\\\"!=typeof navigator&&void 0!==navigator.userAgent?navigator.userAgent.toLowerCase():\\\"\\\";r.includes(\\\"firefox\\\");r.includes(\\\"safari\\\")&&!r.includes(\\\"chrom\\\")&&(r.includes(\\\"version/15.4\\\")||/cpu (os|iphone os) 15_4 like mac os x/.test(r)),r.includes(\\\"webkit\\\")&&r.includes(\\\"edge\\\"),r.includes(\\\"macintosh\\\"),\\\"undefined\\\"!=typeof WorkerGlobalScope&&\\\"undefined\\\"!=typeof OffscreenCanvas&&(self,WorkerGlobalScope),function(){let e=!1;try{const t=Object.defineProperty({},\\\"passive\\\",{get:function(){e=!0}});window.addEventListener(\\\"_\\\",null,t),window.removeEventListener(\\\"_\\\",null,t)}catch(e){}}();const o={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\"};class i extends Error{constructor(e){const t=o[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}function s(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function a(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],s=t[1],a=t[2],u=t[3],x=t[4],f=t[5];return e[0]=u/n,e[1]=-s/n,e[2]=-a/n,e[3]=o/n,e[4]=(a*f-u*x)/n,e[5]=-(o*f-s*x)/n,e}new Array(6);var u={exports:{}};function x(e,t,n){n=n||2;var r,o,i,s,a,u,x,y=t&&t.length,d=y?t[0]*n:e.length,h=f(e,0,d,n,!0),v=[];if(!h||h.next===h.prev)return v;if(y&&(h=function(e,t,n,r){var o,i,s,a=[];for(o=0,i=t.length;o<i;o++)(s=f(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===s.next&&(s.steiner=!0),a.push(w(s));for(a.sort(p),o=0;o<a.length;o++)n=l(n=g(a[o],n),n.next);return n}(e,t,h,n)),e.length>80*n){r=i=e[0],o=s=e[1];for(var b=n;b<d;b+=n)(a=e[b])<r&&(r=a),(u=e[b+1])<o&&(o=u),a>i&&(i=a),u>s&&(s=u);x=0!==(x=Math.max(i-r,s-o))?1/x:0}return c(h,v,n,r,o,x),v}function f(e,t,n,r,o){var i,s;if(o===B(e,t,n,r)>0)for(i=t;i<n;i+=r)s=U(i,e[i],e[i+1],s);else for(i=n-r;i>=t;i-=r)s=U(i,e[i],e[i+1],s);return s&&M(s,s.next)&&(z(s),s=s.next),s}function l(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!M(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(z(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function c(e,t,n,r,o,i,s){if(e){!s&&i&&function(e,t,n,r){var o=e;do{null===o.z&&(o.z=m(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,s,a,u,x=1;do{for(n=e,e=null,i=null,s=0;n;){for(s++,r=n,a=0,t=0;t<x&&(a++,r=r.nextZ);t++);for(u=x;a>0||u>0&&r;)0!==a&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,a--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,x*=2}while(s>1)}(o)}(e,r,o,i);for(var a,u,x=e;e.prev!==e.next;)if(a=e.prev,u=e.next,i?d(e,r,o,i):y(e))t.push(a.i/n),t.push(e.i/n),t.push(u.i/n),z(e),e=u.next,x=u.next;else if((e=u)===x){s?1===s?c(e=h(l(e),t,n),t,n,r,o,i,2):2===s&&v(e,t,n,r,o,i):c(l(e),t,n,r,o,i,1);break}}}function y(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=e.next.next;o!==e.prev;){if(A(t.x,t.y,n.x,n.y,r.x,r.y,o.x,o.y)&&Z(o.prev,o,o.next)>=0)return!1;o=o.next}return!0}function d(e,t,n,r){var o=e.prev,i=e,s=e.next;if(Z(o,i,s)>=0)return!1;for(var a=o.x<i.x?o.x<s.x?o.x:s.x:i.x<s.x?i.x:s.x,u=o.y<i.y?o.y<s.y?o.y:s.y:i.y<s.y?i.y:s.y,x=o.x>i.x?o.x>s.x?o.x:s.x:i.x>s.x?i.x:s.x,f=o.y>i.y?o.y>s.y?o.y:s.y:i.y>s.y?i.y:s.y,l=m(a,u,t,n,r),c=m(x,f,t,n,r),y=e.prevZ,d=e.nextZ;y&&y.z>=l&&d&&d.z<=c;){if(y!==e.prev&&y!==e.next&&A(o.x,o.y,i.x,i.y,s.x,s.y,y.x,y.y)&&Z(y.prev,y,y.next)>=0)return!1;if(y=y.prevZ,d!==e.prev&&d!==e.next&&A(o.x,o.y,i.x,i.y,s.x,s.y,d.x,d.y)&&Z(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(;y&&y.z>=l;){if(y!==e.prev&&y!==e.next&&A(o.x,o.y,i.x,i.y,s.x,s.y,y.x,y.y)&&Z(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;d&&d.z<=c;){if(d!==e.prev&&d!==e.next&&A(o.x,o.y,i.x,i.y,s.x,s.y,d.x,d.y)&&Z(d.prev,d,d.next)>=0)return!1;d=d.nextZ}return!0}function h(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!M(o,i)&&F(o,r,r.next,i)&&k(o,i)&&k(i,o)&&(t.push(o.i/n),t.push(r.i/n),t.push(i.i/n),z(r),z(r.next),r=e=i),r=r.next}while(r!==e);return l(r)}function v(e,t,n,r,o,i){var s=e;do{for(var a=s.next.next;a!==s.prev;){if(s.i!==a.i&&E(s,a)){var u=S(s,a);return s=l(s,s.next),u=l(u,u.next),c(s,t,n,r,o,i),void c(u,t,n,r,o,i)}a=a.next}s=s.next}while(s!==e)}function p(e,t){return e.x-t.x}function g(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,s=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var a=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(a<=o&&a>s){if(s=a,a===o){if(i===r.y)return r;if(i===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!n)return null;if(o===s)return n;var u,x=n,f=n.x,l=n.y,c=1/0;r=n;do{o>=r.x&&r.x>=f&&o!==r.x&&A(i<l?o:s,i,f,l,i<l?s:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),k(r,e)&&(u<c||u===c&&(r.x>n.x||r.x===n.x&&b(n,r)))&&(n=r,c=u)),r=r.next}while(r!==x);return n}(e,t);if(!n)return t;var r=S(n,e),o=l(n,n.next);return l(r,r.next),t===n?o:t}function b(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function m(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*o)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*o)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function w(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function A(e,t,n,r,o,i,s,a){return(o-s)*(t-a)-(e-s)*(i-a)>=0&&(e-s)*(r-a)-(n-s)*(t-a)>=0&&(n-s)*(i-a)-(o-s)*(r-a)>=0}function E(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&F(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(k(e,t)&&k(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||M(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function M(e,t){return e.x===t.x&&e.y===t.y}function F(e,t,n,r){var o=I(Z(e,t,n)),i=I(Z(e,t,r)),s=I(Z(n,r,e)),a=I(Z(n,r,t));return o!==i&&s!==a||(!(0!==o||!T(e,n,t))||(!(0!==i||!T(e,r,t))||(!(0!==s||!T(n,e,r))||!(0!==a||!T(n,t,r)))))}function T(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function k(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function S(e,t){var n=new R(e.i,e.x,e.y),r=new R(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function U(e,t,n,r){var o=new R(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function z(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function R(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function B(e,t,n,r){for(var o=0,i=t,s=n-r;i<n;i+=r)o+=(e[s]-e[i])*(e[i+1]+e[s+1]),s=i;return o}u.exports=x,u.exports.default=x,x.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,s=Math.abs(B(e,0,i,n));if(o)for(var a=0,u=t.length;a<u;a++){var x=t[a]*n,f=a<u-1?t[a+1]*n:e.length;s-=Math.abs(B(e,x,f,n))}var l=0;for(a=0;a<r.length;a+=3){var c=r[a]*n,y=r[a+1]*n,d=r[a+2]*n;l+=Math.abs((e[c]-e[d])*(e[y+1]-e[c+1])-(e[c]-e[y])*(e[d+1]-e[c+1]))}return 0===s&&0===l?0:Math.abs((l-s)/s)},x.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var s=0;s<t;s++)n.vertices.push(e[o][i][s]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};const P=[],C={vertexPosition:0,indexPosition:0};function N(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function _(e,t,n,r,o,i){const s=3+o,a=e[t+0],u=e[t+1],x=P;x.length=o;for(let n=0;n<x.length;n++)x[n]=e[t+2+n];let f=i?i.vertexPosition:0,l=i?i.indexPosition:0;const c=f/s;return N(n,f,a,u,0),x.length&&n.set(x,f+3),f+=s,N(n,f,a,u,1),x.length&&n.set(x,f+3),f+=s,N(n,f,a,u,2),x.length&&n.set(x,f+3),f+=s,N(n,f,a,u,3),x.length&&n.set(x,f+3),f+=s,r[l++]=c,r[l++]=c+1,r[l++]=c+3,r[l++]=c+1,r[l++]=c+2,r[l++]=c+3,C.vertexPosition=f,C.indexPosition=l,C}function L(e,t,n,r,o,i,a,u,x,f){const l=5+u.length,c=i.length/l,y=[e[t+0],e[t+1]],d=[e[n],e[n+1]],h=s(f,[...y]),v=s(f,[...d]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function g(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],s=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),a=[(n[0]-e[0])/s,(n[1]-e[1])/s],u=0===r||0===s?0:Math.acos((x=a[0]*o[0]+a[1]*o[1],f=-1,l=1,Math.min(Math.max(x,f),l)));var x,f,l;return a[0]*i[0]+a[1]*i[1]>0?u:2*Math.PI-u}const b=null!==o;let m=0,w=0;if(null!==r){m=g(h,v,s(f,[...[e[r],e[r+1]]]))}if(b){w=g(v,h,s(f,[...[e[o],e[o+1]]]))}i.push(y[0],y[1],d[0],d[1],p(0,m,w)),i.push(...u),i.push(y[0],y[1],d[0],d[1],p(1,m,w)),i.push(...u),i.push(y[0],y[1],d[0],d[1],p(2,m,w)),i.push(...u),i.push(y[0],y[1],d[0],d[1],p(3,m,w)),i.push(...u),a.push(c,c+1,c+2,c+1,c+3,c+2)}function G(e,t,n,r,o){const i=2+o;let s=t;const a=e.slice(s,s+o);s+=o;const x=e[s++];let f=0;const l=new Array(x-1);for(let t=0;t<x;t++)f+=e[s++],t<x-1&&(l[t]=f);const c=e.slice(s,s+2*f),y=u.exports(c,l,2);for(let e=0;e<y.length;e++)r.push(y[e]+n.length/i);for(let e=0;e<c.length;e+=2)n.push(c[e],c[e+1],...a);return s+2*f}const O=self;O.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesCount,r=t+n,i=new Float32Array(o.renderInstructions),s=i.length/r,a=4*s*(n+e),u=new Uint32Array(6*s),x=new Float32Array(a);let f;for(let e=0;e<i.length;e+=r)f=_(i,e,x,u,n,f);const l=Object.assign({vertexBuffer:x.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);O.postMessage(l,[x.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesCount,r=2,i=new Float32Array(o.renderInstructions);let s=0;const u=o.renderInstructionsTransform,x=[1,0,0,1,0,0];let f,l;for(a(x,u);s<i.length;){l=Array.from(i.slice(s,s+n)),s+=n,f=i[s++];for(let n=0;n<f-1;n++)L(i,s+n*r,s+(n+1)*r,n>0?s+(n-1)*r:null,n<f-2?s+(n+2)*r:null,e,t,l,0,x);s+=f*r}const c=Uint32Array.from(t),y=Float32Array.from(e),d=Object.assign({vertexBuffer:y.buffer,indexBuffer:c.buffer,renderInstructions:i.buffer},o);O.postMessage(d,[y.buffer,c.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesCount,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=G(r,i,e,t,n);const s=Uint32Array.from(t),a=Float32Array.from(e),u=Object.assign({vertexBuffer:a.buffer,indexBuffer:s.buffer,renderInstructions:r.buffer},o);O.postMessage(u,[a.buffer,s.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.ready = false;\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    /**\n     * @private\n     */\n    this.hitVertexShader_ = options.hitVertexShader;\n\n    /**\n     * @private\n     */\n    this.hitFragmentShader_ = options.hitFragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.hitProgram_;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.generateBuffersRun_ = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n            if (received.generateBuffersRun === this.generateBuffersRun_) {\n              this.ready = true;\n            }\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitProgram_ = this.helper.getProgram(\n        this.hitFragmentShader_,\n        this.hitVertexShader_\n      );\n\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    let world = startWorld;\n    const renderCount = this.indicesBuffer_.getSize();\n\n    do {\n      // apply the current projection transform with the invert of the one used to fill buffers\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: 0,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    message['generateBuffersRun'] = ++this.generateBuffersRun_;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        id: 0,\n        type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderHitDetection(frameState, startWorld, endWorld, worldWidth) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    let world = startWorld;\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_, frameState);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n            u_opacity: function () {\n              return this.getOpacity();\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","import { Map, View } from 'ol';\nimport KML from 'ol/format/KML';\nimport { Heatmap as HeatmapLayer, Tile as TileLayer } from 'ol/layer';\nimport { useGeographic } from 'ol/proj';\nimport Stamen from 'ol/source/Stamen';\nimport VectorSource from 'ol/source/Vector';\nimport './style.css';\n\nuseGeographic();\n\nconst blur = document.getElementById('blur');\nconst radius = document.getElementById('radius');\nconst durationElement = document.getElementById('duration');\nconst mode = document.getElementById('radio_frequency')\n\nconst vector = new HeatmapLayer({\n  source: new VectorSource({\n    url: 'outage.kml',\n    format: new KML({extractStyles: false}),\n  }),\n  blur: parseInt(blur.value, 10),\n  radius: parseInt(radius.value, 10),\n  weight: function (feature) {\n    const name = feature.get('name');\n    const duration = parseInt(durationElement.value, 10)\n    \n    if (mode.value == \"frequency\") {\n      const magnitude = parseFloat(name.split(\"_\")[2])/100;\n      return magnitude;\n    }\n    else {\n      const magnitude = parseFloat(name.split(\"_\")[3])/duration;\n      return magnitude;\n    }\n  },\n});\n\nblur.addEventListener('input', function () {\n  vector.setBlur(parseInt(blur.value, 10));\n});\n\ndurationElement.addEventListener('input', function() {\n  vector.getSource().refresh()\n})\nmode.addEventListener('input', function() {\n  vector.getSource().refresh()\n})\nradius.addEventListener('input', function () {\n  vector.setRadius(parseInt(radius.value, 10));\n});\n\nconst raster = new TileLayer({\n  source: new Stamen({\n    layer: 'toner',\n  }),\n});\n\nconst place = [-122.2211144, 47.7196182]\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    raster,\n    vector\n  ],\n  view: new View({\n    center: place,\n    zoom: 14\n  })\n});\n"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","messages","AssertionError","code","message","AssertionError$1","BaseEvent","type","BaseEvent$1","ObjectEventType","Disposable","Disposable$1","binarySearch","haystack","needle","comparator","mid","cmp","numberSafeCompareFunction","low","high","found","a","b","linearFindNearest","arr","target","direction","i","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","EventTarget","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","len","keys","unByKey","Observable$1","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","BaseObject$1","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","f","elem","n","prev","except","Collection$1","assert","assertion","errorCode","Feature","geometryOrProperties","geometry","properties","clone","style","createStyleFunction","id","name","styles","Feature$1","ua","FIREFOX","SAFARI","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","tmp_","create","reset","transform","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","apply","coordinate","x","y","rotate","angle","cos","sin","scale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","minY","maxX","maxY","createOrUpdate","buffer","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","Projection$1","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","add","transforms","destination","sourceCode","destinationCode","clamp","min","max","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","tmp","j","coef","k","l","m","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","delta","coordinate1","coordinate2","cosAngle","sinAngle","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","getter","metersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","createTransform","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","Geometry$1","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","SimpleGeometry$1","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","linearRingArea","LinearRing$1","Point","Point$1","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","RenderEventType","Fill","color","Fill$1","interpolatePoint","fraction","o","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","LineString","lineString","LineString$1","Stroke","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","Stroke$1","ImageState","hasArea","ratio","toSize","ImageStyle","pixelRatio","displacement","opacity","rotateWithView","ImageStyle$1","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","rgb","fromString","cacheSize","s","fromStringInternal_","asArray","g","hasAlpha","normalize","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","releaseCanvas","context","replaceNode","newNode","oldNode","parent","removeNode","removeChildren","replaceChildren","children","oldChildren","oldChild","newChild","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","defaultFillStyle","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultLineWidth","checkedFonts","RegularShape","fill","image","renderOptions","stroke","strokeWidth","r1","r2","points","alpha","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","strokeStyle","maxRadius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","Circle","Style","defaultGeometryFunction","renderer","text","feature","zIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","Style$1","DEFAULT_FILL_COLOR","Text","overflow","font","maxAngle","offsetX","offsetY","placement","textAlign","justify","textBaseline","padding","Text$1","LayerProperty","BaseLayer","managed","state","states","background","maxResolution","minResolution","maxZoom","minZoom","visible","zindex","BaseLayer$1","Layer","baseOptions","pixel","resolve","frameState","layerRenderer","map","layerStatesArray","layerState","arrayLayerState","inView","viewState","zoom","Layer$1","quickselect","left","quickselectStep","defaultCompare","z","sd","newLeft","newRight","swap","RBush","maxEntries","bbox","result","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","error","taintedTestContext","IconImage","imageState","ctx","iconImageCache","Icon","getIconImage","iconImageSize","Icon$1","toStyle","flatStyle","getFill","getStroke","getText","getImage","prefix","iconSrc","iconImg","shapePoints","circleRadius","BaseVectorLayer","renderOrder","styleLike","toStyleFunction","BaseVectorLayer$1","LayerRenderer","layer","tiles","tile","tileRange","hitTolerance","matches","LayerRenderer$1","RenderEvent","inversePixelTransform","RenderEvent$1","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","container","topLeft","topRight","bottomRight","bottomLeft","inverted","CanvasLayerRenderer$1","ViewHint","RBush_","extents","uid","rbush","RBush$1","Source","adaptAttributions","self","reject","attributions","attributionLike","Source$1","VectorEventType","all","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","features","dataProjection","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","collection","featureKey","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","filter","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","TileState","easeIn","easeOut","inAndOut","linear","Tile","tileCoord","time","Tile$1","ImageTile","tileLoadFunction","getBlankImage","ImageTile$1","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","duration","Kinetic$1","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","tmpCoord","order","expireIconCache","MapRenderer$1","CompositeMapRenderer","declutterLayers","previousElement","sourceState","CompositeMapRenderer$1","GroupEvent","LayerGroup","layers","layersArray","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","LayerGroup$1","MapEvent","MapEvent$1","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEvent$1","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapBrowserEventHandler$1","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","PriorityQueue$1","TileQueue","tilePriorityFunction","tileChangeCallback","added","tileKey","maxTotalLoading","maxNewLoads","newLoads","TileQueue$1","getTilePriority","tileSourceKey","tileCenter","tileResolution","ViewProperty","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","oldPadding","newPadding","newOptions","var_args","args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","hints","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","View$1","Control","mapEvent","Control$1","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","label","activeLabel","cssClasses","lookup","visibleAttributions","collapsible","attributionGetter","collapsed","Attribution$1","Rotate","compassClassName","button","view","Rotate$1","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","Zoom$1","defaults","controls","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","Interaction$1","DoubleClickZoom","stopEvent","browserEvent","DoubleClickZoom$1","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","PointerInteraction$1","conditions","pass","altShiftKeysOnly","focus","targetElement","activeElement","focusWithTabindex","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","distance","centerpx","DragPan$1","DragRotate","DragRotate$1","RenderBox","startPixel","endPixel","px","RenderBox$1","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragBox$1","DragZoom","DragZoom$1","KeyCode","KeyboardPan","keyEvent","keyCode","mapUnitsDelta","KeyboardPan$1","KeyboardZoom","charCode","KeyboardZoom$1","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","MouseWheelZoom$1","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","viewportPosition","PinchRotate$1","PinchZoom","scaleDelta","PinchZoom$1","interactions","kinetic","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","addLayersFrom","layerGroup","eventPosition","group","viewCoordinate","rootNode","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","defaultView","keyboardEventTarget","previousFrameState","viewHints","oldLayerGroup","computedStyle","overlays","Map$1","LRUCache","highWaterMark","keep","entry","LRUCache$1","getKeyZXY","fromKey","hash","withinExtentAndZ","TileCache","usedTiles","TileCache$1","TileRange","TileRange$1","GeometryCollection","geometries","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","clonedGeometries","GeometryCollection$1","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiLineString$1","MultiPoint","multiPoint","MultiPoint$1","MultiPolygon","thisLayout","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","MultiPolygon$1","FeatureFormat","transformGeometryWithOptions","write","featureProjection","transformed","equivalentProjection","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeSimpleNodeFactory","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","parsers","parser","pushParseAndPop","serialize","serializersNS","nodeFactory","pushSerializeAndPop","xmlSerializer_","getXMLSerializer","document_","XMLFeature","XMLFeature$1","readBoolean","readBooleanString","string","readDecimal","readDecimalString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","writeDecimalTextNode","decimal","GX_NAMESPACE_URIS","NAMESPACE_URIS","SCHEMA_LOCATION","ICON_ANCHOR_UNITS_MAP","PLACEMARK_PARSERS","extendedDataParser","regionParser","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","placemarkStyleMapParser","readStyleURL","readGxMultiTrack","readGxTrack","NETWORK_LINK_PARSERS","linkParser","LINK_PARSERS","readURI","REGION_PARSERS","latLonAltBoxParser","lodParser","KML_SEQUENCE","KML_SERIALIZERS","writeDocument","writePlacemark","DEFAULT_COLOR","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","scaleForSize","createStyleDefaults","TEXTAREA","defaultIconUrlFunction","href","KML","styleUrl","createFeatureStyleFunction","styleUri","baseURI","styleMapValue","readStyleMapValue","localName","fs","networkLinks","regions","kml","xmlnsUri","createNameStyleFunction","foundStyle","textOffset","imageStyle","imageSize","imageScale","textStyle","defaultStyle","sharedStyles","showPointNames","drawName","multiGeometryPoints","featureStyle","findStyle","nameStyle","baseStyle","styleValue","readColor","hexColor","readFlatCoordinates","re","readVec2","xunits","yunits","origin","readScale","STYLE_MAP_PARSERS","pairDataParser","ICON_STYLE_PARSERS","readIcon","iconStyleParser","styleObject","IconObject","drawIcon","anchorXUnits","anchorYUnits","anchorOrigin","hotSpot","heading","resizeScale","LABEL_STYLE_PARSERS","labelStyleParser","LINE_STYLE_PARSERS","lineStyleParser","POLY_STYLE_PARSERS","polyStyleParser","fillStyle","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","gxCoordParser","GX_MULTITRACK_GEOMETRY_PARSERS","GX_TRACK_PARSERS","whenParser","gxTrackObject","whens","ICON_PARSERS","iconObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIsParser","outerBoundaryIsParser","flatLinearRings","STYLE_PARSERS","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","dataParser","featureObject","EXTENDED_DATA_PARSERS","schemaDataParser","PAIR_PARSERS","pairObject","placemarkObject","SCHEMA_DATA_PARSERS","simpleDataParser","LAT_LON_ALT_BOX_PARSERS","regionObject","LOD_PARSERS","lodObject","INNER_BOUNDARY_IS_PARSERS","innerBoundaryFlatLinearRings","OUTER_BOUNDARY_IS_PARSERS","flatLinearRing","when","writeColorTextNode","rgba","abgr","hex","writeCoordinatesTextNode","EXTENDEDDATA_NODE_SERIALIZERS","writeDataNode","writeDataNodeValue","writeDataNodeName","pair","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","parentNode","DATA_NODE_FACTORY","writeExtendedData","namesAndValues","names","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","writeIcon","icon","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","writeVec2","writeScaleTextNode","writeIconStyle","iconProperties","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","writeLabelStyle","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","writeLineStyle","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","writeStyle","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","styleArray","pointStyles","lineStyles","polyStyles","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","writePolyStyle","STYLE_SEQUENCE","STYLE_SERIALIZERS","vec2","KML$1","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","CONTEXT_IDS","getContext","attributes","BufferUsage","WebGLArrayBuffer","usage","getArrayClassForType","WebGLArrayBuffer$1","ContextEventType","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","gl","vertexShader","fragmentShader","verticesArray","textureSize","internalFormat","border","nextPass","preCompose","postCompose","canvasId","textureSlot","uniform","WebGLPostProcessingPass$1","fromTransform","mat4","DefaultUniform","AttributeType","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getCanvas","cacheItem","WebGLHelper","uniforms","canvasCacheKey","bufferKey","bufferCache","webGlBuffer","buf","bufferCacheEntry","disableAlphaBlend","renderTarget","elementType","elementSize","numItems","offsetInBytes","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","program","shader","fragmentShaderSource","vertexShaderSource","attribName","location","computeAttributesStride","attr","getByteSizeFromType","texture","WebGLLayerRenderer","incrementGroup","groupNumber","WebGLLayerRenderer$1","tmpArray4","WebGLRenderTarget","helper","WebGLRenderTarget$1","WebGLWorkerMessageType","earcutModule","earcut","earcut_1","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","indexCurve","stop","next","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","zOrder","maxZ","locallyInside","isValidDiagonal","splitPolygon","queue","list","getLeftmost","compareX","eliminateHole","hole","bridge","findHoleBridge","bridgeReverse","hx","hy","qx","mx","my","tanMin","tan","sectorContainsSector","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","py","intersectsPolygon","middleInside","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","num","inside","Node","an","bp","polygonArea","trianglesArea","sum","holeIndex","colorEncodeId","radix","divide","colorDecodeId","mult","WebGLPointsLayerRenderer","projectionMatrixTransform","customAttributes","attribute","createWebGLWorker","received","projectionTransform","makeInverseTransform","endWorld","startWorld","world","renderCount","translateTransform","multiplyTransform","vectorSource","viewNotMoving","extentChanged","sourceChanged","renderBuffer","BaseVector","totalInstructionsCount","totalHitInstructionsCount","featureCache","tmpCoords","tmpColor","renderIndex","hitIndex","hitColor","featureUid","hitMessage","WebGLPointsLayerRenderer$1","DEFAULT_GRADIENT","Heatmap","weight","createGradient","blur","colors","gradient","HeatmapLayer","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","transformInvCache","transformInv","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","Triangulation$1","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","render","triangulation","sources","gutter","renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","ReprojTile$1","CanvasTileLayerRenderer","tileLayer","tileState","useInterimTilesOnError","layerExtent","tilePixelRatio","tileOrigin","tileSize","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpExtent","tmpTileRange","viewport","inTransition","childTileRange","covered","canvasScale","canvasTransform","toTransformString","zs","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","alphaChanged","postRenderFunction","preload","tileCallback","wantedTiles","tileCount","CanvasTileLayerRenderer$1","TileProperty","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","TileGrid$1","TileEventType","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","tileCache","getTileGridForProjection","scaleSize","TileSourceEvent","TileSource$1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","urls","match","startCharCode","stopCharCode","UrlTile","tileUrlFunction","UrlTile$1","TileImage","defaultTileLoadFunction","usedTileCache","thisProj","projKey","urlTileCoord","tileUrl","newTile","interimTile","tilegrid","proj","imageTile","TileImage$1","BaseTileLayer","BaseTileLayer$1","TileLayer","TileLayer$1","XYZ","XYZ$1","ATTRIBUTION","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","ProviderConfig","Stamen","provider","providerConfig","layerConfig","Stamen$1","durationElement","mode","vector","raster","place"],"mappings":"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"}